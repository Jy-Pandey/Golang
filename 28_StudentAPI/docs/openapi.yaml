openapi: 3.0.3
info:
  title: Student API
  description: A simple API to manage students, courses, and enrollments.
  version: 1.0.0

servers:
  - url: http://localhost:8080

paths:
  /students:
    post:
      tags:
        - Students
      summary: Create a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentInput'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid input
    get:
      tags:
        - Students
      summary: Get all students
      responses:
        '200':
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'

  /students/{studentId}/enroll/{courseId}:
    post:
      tags:
        - Students
      summary: Enroll a student in a course
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Enrollment successful
        '400':
          description: Invalid student or course ID

  /students/{id}/courses:
    get:
      tags:
        - Students
      summary: Get courses enrolled by a student
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of courses the student is enrolled in
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'

  /courses:
    post:
      tags:
        - Courses
      summary: Create a new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseInput'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Invalid input
    get:
      tags:
        - Courses
      summary: Get all courses
      responses:
        '200':
          description: A list of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        age:
          type: integer
        email:
          type: string
        createdAt:
          type: string
          format: date-time

    StudentInput:
      type: object
      required:
        - name
        - age
        - email
      properties:
        name:
          type: string
        age:
          type: integer
        email:
          type: string

    Course:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time

    CourseInput:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
